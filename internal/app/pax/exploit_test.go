package pax

import (
	"crypto/aes"
	"encoding/base64"
	"net/url"
	"testing"

	"github.com/stretchr/testify/assert"

	"github.com/stretchr/testify/require"
)

func Test_ExploitURLViaQuerystring(t *testing.T) {

	key := []byte("1234567890123456")
	secret := []byte("this an example secret")

	cipherText, err := encrypt(secret, key)
	require.NoError(t, err)

	encodedCipherText := base64.StdEncoding.EncodeToString(cipherText)

	sample := url.QueryEscape(encodedCipherText)

	ts := startVulnerableServer(key)
	defer ts.Close()

	result, err := Exploit(ts.URL+"?enc="+sample, sample, &ExploitOptions{
		BlockSize: aes.BlockSize,
	})
	require.NoError(t, err)

	assert.Equal(t, secret, result)
}

func Test_ExploitURLViaCookie(t *testing.T) {

	key := []byte("1234567890123456")
	secret := []byte("this an example secret")

	cipherText, err := encrypt(secret, key)
	require.NoError(t, err)

	encodedCipherText := base64.StdEncoding.EncodeToString(cipherText)

	ts := startVulnerableServer(key)
	defer ts.Close()

	result, err := Exploit(ts.URL, encodedCipherText, &ExploitOptions{
		BlockSize: aes.BlockSize,
		Cookies:   "ENC=" + encodedCipherText,
	})
	require.NoError(t, err)

	assert.Equal(t, secret, result)
}
