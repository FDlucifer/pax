package pax

import (
	"crypto/aes"
	"encoding/base64"
	"net/url"
	"testing"

	"github.com/stretchr/testify/assert"

	"github.com/stretchr/testify/require"
)

func Test_Crypto(t *testing.T) {

	input := []byte("this is a test")
	key := []byte("dsf0wad5373is7d7")

	enc, err := encrypt(input, key)
	require.NoError(t, err)

	dec, err := decrypt(enc, key)
	require.NoError(t, err)

	assert.Equal(t, input, dec)

}

func Test_ExploitURL(t *testing.T) {

	key := []byte("1234567890123456")
	secret := "example secret"

	ciphertext, err := encrypt([]byte(secret), key)
	require.NoError(t, err)

	encodedCipherText := base64.StdEncoding.EncodeToString(ciphertext)

	sample := url.QueryEscape(encodedCipherText)

	ts := startVulnerableServer(key)
	defer ts.Close()

	result, err := Exploit(ts.URL+"?enc="+sample, sample, aes.BlockSize)
	require.NoError(t, err)

	assert.Equal(t, string(secret), result)
}
